

&НаКлиенте
Процедура ОбработатьОшибкиИОтказы(Команда)
	ОбработатьОшибкиИОтказыНаСервере();
КонецПроцедуры

&НаСервере
Процедура ОбработатьОшибкиИОтказыНаСервере()
	
	УчЗапись = Справочники.УчётныеЗаписиЭП.Выбрать();
	
	Пока УчЗапись.Следующий() Цикл
		Сообщить(УчЗапись.АдресЭП);
		Профиль = ПолучитьПрофиль(УчЗапись);
		Почта = ПодключитьсяКПочте(Профиль);
		
		МассивСообщений = новый Массив;
		МассивСообщений = Почта.Выбрать(Ложь);
		Для Индекс=0 по МассивСообщений.Количество() - 1 Цикл
		
			Сообщение = МассивСообщений[Индекс];
			Тема = Сообщение.Тема;
			Отправитель = Сообщение.Отправитель.Адрес;
//			Сообщить(Сообщение.Тема);
//			Сообщить("СтрНайти(НРег(Тема), ""отпис"")");
//			Сообщить(СтрНайти(НРег(Тема), "отпис"));
//			Сообщить("СтрНайти(НРег(Отправитель), ""mailer-daemon"")");
//			Сообщить(СтрНайти(НРег(Отправитель), "mailer-daemon"));
			Если (СтрНайти(НРег(Тема), "отпис")) Тогда
//				Сообщить("Тама письма - отписка");
//				Сообщить(Отправитель);
				НаборЗаписей = РегистрыСведений.ПротоколОтправки.СоздатьНаборЗаписей();
				НаборЗаписей.Отбор.АдресЭПКонтрагента.Установить(Отправитель);
				НаборЗаписей.Прочитать();
//				Сообщить("Колво записей в наборе для отписки");
//				Сообщить(НаборЗаписей.Количество());
				Запись = НаборЗаписей[НаборЗаписей.Количество()-1];
				Запись.ДопРезультат="Отписка";
				НаборЗаписей.Записать();
				
			Иначе Если (СтрНайти(НРег(Отправитель), "mailer-daemon")) Тогда
//				Сообщить("Тема письма - не доставлено");
//				Сообщить(Отправитель);
				Тексты = Сообщение.Тексты;
				СодержимоеСообщения = "";
				Для каждого ТесктСообщения из Тексты Цикл
					СодержимоеСообщения = СодержимоеСообщения + ТесктСообщения.Текст;
				КонецЦикла;
//				Сообщить(СодержимоеСообщения);
				Шаблон = "(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|""(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21\x23-\x5b\x5d-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])*"")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\[(?:(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9]))\.){3}(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9])|[a-z0-9-]*[a-z0-9]:(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21-\x5a\x53-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])+)\])";
				//"[a-z].[a-z]+@.[a-z]+\.[a-z].[a-z]+";
				АдресЭП = НайтиПодстроки(Шаблон, СодержимоеСообщения);
//				Сообщить("Найден адресЭП");
//				Сообщить(АдресЭП);
				НаборЗаписей = РегистрыСведений.ПротоколОтправки.СоздатьНаборЗаписей();
				НаборЗаписей.Отбор.АдресЭПКонтрагента.Установить(АдресЭП);
				НаборЗаписей.Прочитать();
//				Сообщить("Колво записей в наборе с ошибкой");
//				Сообщить(НаборЗаписей.Количество());
				Запись = НаборЗаписей[НаборЗаписей.Количество()-1];
				Запись.ДопРезультат="НеСуществующийАдресЭП";
				НаборЗаписей.Записать();
			КонецЕсли;
			КонецЕсли;
			
	КонецЦикла;
		
		
		ОтключитьсяОтПочты(Почта);
		Сообщить("Отключились от почты");
	КонецЦикла;
	
	
КонецПроцедуры

Функция ПодключитьсяКПочте(Профиль)	
	Почта = Новый ИнтернетПочта;
	Попытка
	Почта.Подключиться(Профиль);
	Сообщить("Подключение к профилю прошло успешно");
	Исключение
	Сообщить(ОписаниеОшибки()); 
	Возврат 0;
	КонецПопытки;
	Возврат Почта;
КонецФункции

Процедура ОтключитьсяОтПочты(Почта)
	Почта.Отключиться(); 
	Сообщить("Отключение от почты");
КонецПроцедуры


Функция ПолучитьПрофиль(УчЗапись)
Профиль = Новый ИнтернетПочтовыйПрофиль;
Профиль.АдресСервераSMTP = УчЗапись.СерверSMTP;
Профиль.ПортSMTP = УчЗапись.ПортSMTP;
Профиль.ИспользоватьSSLSMTP = Истина;
Профиль.Пользователь = УчЗапись.АдресЭП;
Профиль.Пароль = УчЗапись.Пароль;
Профиль.ПользовательSMTP = УчЗапись.АдресЭП;
Профиль.ПарольSMTP = УчЗапись.Пароль;
Профиль.АутентификацияSMTP = СпособSMTPАутентификации.ПоУмолчанию;

Профиль.АдресСервераIMAP = УчЗапись.СерверIMAP;
Профиль.ПортIMAP = УчЗапись.ПортIMAP;
Профиль.ИспользоватьSSLIMAP = Истина;
Профиль.ТолькоЗащищеннаяАутентификацияIMAP = Ложь;
Профиль.ПользовательIMAP = УчЗапись.АдресЭП;
Профиль.ПарольIMAP = УчЗапись.Пароль;

Профиль.АдресСервераPOP3 = УчЗапись.СерверPOP3;
Профиль.ПортPOP3 = УчЗапись.ПортPOP3;
Профиль.ИспользоватьSSLPOP3 = Истина;
Профиль.ТолькоЗащищеннаяАутентификацияPOP3 = Ложь;

Профиль.ВремяОжидания = 50; 

Возврат Профиль;
КонецФункции


Функция НайтиПодстроки(Шаблон, Текст)

	RegExp = Новый COMОбъект("VBScript.RegExp");
	
	//Поиск всех вхождений шаблона	
	RegExp.Global = Ложь;	

	//Игнорировать регистр символов
	RegExp.IgnoreCase = Истина; 
	
	//Многострочный режим	
	RegExp.MultiLine = Истина; 
	RegExp.Pattern = Шаблон;
	Matches = RegExp.Execute(Текст);
	МассивЗначений = Новый Массив();
	
	Для каждого StrMatches Из Matches Цикл		
		МассивЗначений.Добавить(StrMatches.Value);		
	КонецЦикла;
	
	Возврат МассивЗначений[0];
	
КонецФункции 